<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 缓存管理器 -->
	<bean id="cacheManager"
		class="com.zqw.bss.util.security.shiro.SpringCacheManagerWrapper">
		<property name="cacheManager" ref="springCacheManager" />
	</bean>

	<bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcacheManager" />
	</bean>

	<!--ehcache -->
	<bean id="ehcacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
	</bean>


	<!-- shiro redisManager -->
	<bean id="redisManager" class="com.zqw.bss.util.security.shiro.redis.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="expire" value="7200" />
		<!-- optional properties: <property name="timeout" value="10000"/> <property 
			name="password" value="123456"/> -->
	</bean>
	<bean id="redisManagerForMQ" class="com.zqw.bss.util.security.shiro.redis.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="expire" value="7200" />
		<!-- optional properties: <property name="timeout" value="10000"/> <property 
			name="password" value="123456"/> -->
	</bean>

	<!-- redisSessionDAO -->
	<bean id="redisSessionDAO"
		class="com.zqw.bss.util.security.shiro.redis.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- cacheManager -->
	<bean id="redisCacheManager" class="com.zqw.bss.util.security.shiro.redis.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	
	
	
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="com.zqw.bss.util.security.shiro.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="${shiro.algorithmName}" />
		<property name="hashIterations" value="${shiro.hashIterations}" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userJdbcRealm" class="com.zqw.bss.util.security.shiro.UserJdbcRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
		<property name="authenticationCachingEnabled" value="true"/> 
		<property name="authenticationCacheName" value="authenticationCache"/> 
		<property name="authorizationCachingEnabled" value="true"/> 
		<property name="authorizationCacheName" value="authorizationCache"/> 
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
		<!--
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />-->
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<!-- <property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
		<!--property name="sessionDAO" ref="sessionDAO" /-->
		<property name="sessionDAO" ref="redisSessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="${shiro.userRealm}" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<!-- <property name="cacheManager" ref="redisCacheManager" />-->
	</bean>

	
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
 

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="loginUrl" value="/page/login/login.jsp" />
	</bean>

	<bean id="sysUserFilter" class="com.zqw.bss.util.security.shiro.SysUserFilter" />


	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="${shiro.loginUrl}" />
	</bean>

	<bean id="filterChainManager"
		class="com.zqw.bss.util.security.shiro.CustomDefaultFilterChainManager">
		<property name="loginUrl" value="/page/login/login.jsp" />
		<property name="successUrl" value="/page/index.jsp" />
		<property name="unauthorizedUrl" value="/page/common/unauthorized.html" />

		<property name="customFilters">
			<util:map>

				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="sysUser" value-ref="sysUserFilter" />
			</util:map>
		</property>
		<property name="defaultFilterChainDefinitions">
			<value>
				<!-- /CXFServlet/jaxrs/place/List/** = anon /CXFServlet/jaxrs/place/**=authc,perms[place:view] 
					/login = authc /logout = logout /unauthorized.jsp = authc /login = authc -->
				/images/** = anon
				/js/**= anon
				/style/**= anon
				/page/common/**= anon
				/page/reg/**=anon
				/template/**=anon
				/page/login/login.jsp = authc
				/CXF/**=user
				/page/**=user
				/CXF/rs/tosys/**=noSessionCreation,authcBasic
				/CXF/rs/owner/direct/**=anon
				/CXF/rs/salesagent/savephone/**=anon
				/CXF/rs/salesagent/direct/valid/**=anon
				/CXF/rs/salesagent/getcode/**=anon
				/CXF/rs/user/username/**=anon
				/page/basicauth/auth.jsp=authcBasic
				/logout = logout
			</value>
		</property>
	</bean>

	<bean id="filterChainResolver"
		class="com.zqw.bss.util.security.shiro.CustomPathMatchingFilterChainResolver">
		<property name="customDefaultFilterChainManager" ref="filterChainManager" />
	</bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="shiroFilter" />
		<property name="targetMethod" value="setFilterChainResolver" />
		<property name="arguments" ref="filterChainResolver" />
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>